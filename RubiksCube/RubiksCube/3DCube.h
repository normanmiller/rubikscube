#include <stdlib.h>
#include <glut.h>

#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>

#include <math.h>

#define CENTER_LOWER_BOUND -0.5
#define CENTER_UPPER_BOUND 0.5
#define NEG_UPPER_BOUND -0.65
#define NEG_LOWER_BOUND -1.65
#define POS_LOWER_BOUND 0.65
#define POS_UPPER_BOUND 1.65

typedef enum Rotation
{
    None = 0,
    Right = 1,
    iRight = 2,
    Front = 3,
    iFront = 4,
    Left = 5,
    iLeft = 6,
    Back = 7,
    iBack = 8,
    Down = 9,
    iDown = 10,
    Up = 11,
    iUp = 12,
};

static float rightAngle = 0.0f;
static float leftAngle = 0.0f;
static float frontAngle = 0.0f;
static float backAngle = 0.0f;
static float upAngle = 0.0f;
static float downAngle = 0.0f;

void cubeInteraction(std::vector<Rotation>);
void drawFront();
void drawLeft();
void drawRight();
void drawBack();
void drawUp();
void drawDown();

void drawCoreX(); // Core sector parallel to Up and Down
void drawCoreY(); // Core sector parallel to Front and Back
void drawCoreZ(); // Core sector parallel to Left and Right

/* Vertex Array Face Ordering Scheme:
 * F, R, U, L, B, D
 */

#pragma region CENTERS

#pragma region Core Cube
static GLfloat cube_core[] = {
    //FRONT
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    //LEFT
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    //DOWN
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    //UP
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    //BACK
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    //RIGHT
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0
};
#pragma endregion Internal core of the cube

#pragma region Center Front
static GLfloat cube_center_front[] = {
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0
};
#pragma endregion F=Orange

#pragma region Center Back
static GLfloat cube_center_back[] = {
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,

    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0
};
#pragma endregion B=Red

#pragma region Center Up
static GLfloat cube_center_up[] = {
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.1, 0.66,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.1, 0.66,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.1, 0.66,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.1, 0.66,

    CENTER_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0
};
#pragma endregion U=Blue

#pragma region Center Down
static GLfloat cube_center_down[] = {
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.66, 0.1,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.66, 0.1,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.66, 0.1,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.66, 0.1,

    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0
};
#pragma endregion D=Green

#pragma region Center Right
static GLfloat cube_center_right[] = {
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 1, 1, 1
};
#pragma endregion R=White

#pragma region Center Left
static GLfloat cube_center_left[] = {
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, CENTER_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, CENTER_LOWER_BOUND, 1, 1, 0
};
#pragma endregion L=Yellow

#pragma endregion Expand for Center Cube Vertex Arrays

#pragma region CORNERS

#pragma region Top Corner FR
static GLfloat cube_corner_top_FR[] = {
    POS_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,

    POS_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    POS_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,

    POS_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,
    POS_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,

    POS_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,

    POS_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    POS_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,

    POS_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND
};

static GLfloat cube_corner_top_FR_color[] =
{
    1, 0.5, 0,
    1, 0.5, 0,
    1, 0.5, 0,
    1, 0.5, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    1, 1, 1,
    1, 1, 1,
    1, 1, 1,
    1, 1, 1
};

#pragma endregion F=Orange; R=White; U=Blue

#pragma region Top Corner FL
static GLfloat cube_corner_top_FL[] = {
    NEG_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,

    NEG_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,

    NEG_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,

    NEG_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,

    NEG_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,

    NEG_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND
};

static GLfloat cube_corner_top_FL_color[] = {
    1, 0.5, 0,
    1, 0.5, 0,
    1, 0.5, 0,
    1, 0.5, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    1, 1, 0,
    1, 1, 0,
    1, 1, 0,
    1, 1, 0
};
#pragma endregion F=Orange; L=Yellow; U=Blue

#pragma region Top Corner RB
static GLfloat cube_corner_top_RB[] = {
    POS_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,

    POS_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,

    POS_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,

    POS_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,

    POS_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,

    POS_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND
};

static GLfloat cube_corner_top_RB_color[] = {
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    1, 1, 1,
    1, 1, 1,
    1, 1, 1,
    1, 1, 1
};
#pragma endregion R=White; B=Red; U=Blue

#pragma region Top Corner LB
static GLfloat cube_corner_top_LB[] = {
    NEG_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,

    NEG_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,

    NEG_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,

    NEG_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,

    NEG_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,

    NEG_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND
};

static GLfloat cube_corner_top_LB_color[] = {
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,
    0.1, 0.1, 0.66,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    1, 1, 0,
    1, 1, 0,
    1, 1, 0,
    1, 1, 0
};
#pragma endregion L=Yellow; B=Red; U=Blue

#pragma region Bottom Corner FR
static GLfloat cube_corner_bottom_FR[] = {
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 1, 1, 1
};

static GLfloat cube_corner_bottom_FR_color[] = {
    1, 0.5, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 1, 1, 1
};
#pragma endregion F=Orange; R=White; D=Green

#pragma region Bottom Corner FL
static GLfloat cube_corner_bottom_FL[] = {
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    NEG_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,

    NEG_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 1, 1, 0
};
#pragma endregion F=Orange; L=Yellow; D=Green

#pragma region Bottom Corner RB
static GLfloat cube_corner_bottom_RB[] = {
    POS_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND,

    POS_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND
};

static GLfloat cube_corner_bottom_RB_color[] = {
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    0.1, 0.66, 0.1,
    0.1, 0.66, 0.1,
    0.1, 0.66, 0.1,
    0.1, 0.66, 0.1,

    0, 0, 0,
    0, 0, 0,
    0, 0, 0,
    0, 0, 0,

    1, 1, 1,
    1, 1, 1,
    1, 1, 1,
    1, 1, 1
};
#pragma endregion R=White; B=Red; D=Green

#pragma region Bottom Corner LB
static GLfloat cube_corner_bottom_LB[] = {
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,

    NEG_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0.1, 0.66, 0.1,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0.1, 0.66, 0.1,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0.1, 0.66, 0.1,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0.1, 0.66, 0.1,

    NEG_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 1, 1, 0
};
#pragma endregion L=Yellow; B=Red; D=Green

#pragma endregion Expand for Corner Cube Vertex Arrays

#pragma region EDGES

#pragma region Front Top Edge
static GLfloat cube_edge_FU[] = {
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    CENTER_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND, 0.1, 0.1, 0.66,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND, 0.1, 0.1, 0.66,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND, 0.1, 0.1, 0.66,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND, 0.1, 0.1, 0.66,

    CENTER_LOWER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, POS_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0
};
#pragma endregion F=Orange; U=Blue

#pragma region Front Bottom Edge
static GLfloat cube_edge_FD[] = {
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0.1, 0.66, 0.1,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0.1, 0.66, 0.1,

    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0
};
#pragma endregion F=Orange; D=Green

#pragma region Left Top Edge
static GLfloat cube_edge_LU[] = {
    NEG_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.1, 0.66,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.1, 0.66,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.1, 0.66,
    NEG_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.1, 0.66,

    NEG_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 1, 1, 0
};
#pragma endregion L=Yellow; U=Blue

#pragma region Left Bottom Edge
static GLfloat cube_edge_LD[] = {
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.66, 0.1,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.66, 0.1,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.66, 0.1,
    NEG_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.66, 0.1,

    NEG_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 1, 1, 0
};
#pragma endregion L=Yellow; D=Green

#pragma region Back Top Edge
static GLfloat cube_edge_BU[] = {
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,

    CENTER_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND, 0.1, 0.1, 0.66,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND, 0.1, 0.1, 0.66,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND, 0.1, 0.1, 0.66,
    CENTER_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND, 0.1, 0.1, 0.66,

    CENTER_LOWER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, POS_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, POS_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0
};
#pragma endregion B=Red; U=Blue

#pragma region Back Bottom Edge
static GLfloat cube_edge_BD[] = {
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,

    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0.1, 0.66, 0.1,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0.1, 0.66, 0.1,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0.1, 0.66, 0.1,
    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0.1, 0.66, 0.1,

    CENTER_LOWER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_LOWER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    CENTER_UPPER_BOUND, NEG_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0
};
#pragma endregion B=Red; D=Green

#pragma region Right Top Edge
static GLfloat cube_edge_RU[] = {
    POS_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.1, 0.66,
    POS_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.1, 0.66,
    POS_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.1, 0.66,
    POS_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.1, 0.66,

    POS_LOWER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, POS_UPPER_BOUND, CENTER_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, POS_UPPER_BOUND, CENTER_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, POS_LOWER_BOUND, CENTER_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, POS_LOWER_BOUND, CENTER_LOWER_BOUND, 1, 1, 1
};
#pragma endregion R=White; U=Blue

#pragma region Right Bottom Edge
static GLfloat cube_edge_RD[] = {
    POS_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.66, 0.1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 0.1, 0.66, 0.1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.66, 0.1,
    POS_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0.1, 0.66, 0.1,

    POS_LOWER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_LOWER_BOUND, CENTER_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, NEG_UPPER_BOUND, CENTER_LOWER_BOUND, 1, 1, 1
};
#pragma endregion R=White; D=Green

#pragma region Front Left Edge
static GLfloat cube_edge_FL[] = {
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 1, 1, 0
};
#pragma endregion F=Orange; L=Yellow

#pragma region Front Right Edge
static GLfloat cube_edge_FR[] = {
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 0.5, 0,

    POS_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, CENTER_UPPER_BOUND, POS_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, POS_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, POS_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, POS_LOWER_BOUND, 1, 1, 1
};
#pragma endregion F=Orange; R=White

#pragma region Left Back Edge
static GLfloat cube_edge_LB[] = {
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,

    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 1, 0,
    NEG_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 1, 1, 0
};
#pragma endregion L=Yellow; B=Red

#pragma region Right Back Edge
static GLfloat cube_edge_RB[] = {
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 0, 0,

    POS_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    POS_LOWER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    POS_LOWER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 0, 0, 0,

    POS_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_UPPER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_UPPER_BOUND, NEG_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_LOWER_BOUND, 1, 1, 1,
    POS_UPPER_BOUND, CENTER_LOWER_BOUND, NEG_UPPER_BOUND, 1, 1, 1
};
#pragma endregion R=White; B=Red

#pragma endregion Expand for Edge Cube Vertex Arrays